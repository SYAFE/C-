using System;

namespace Shape
{
    // Point class
    // 필드: double x, y
    // 생성자: double, double
    // 메소드: GetX(), GetY(), SetX(), SetY(), 문자열 리턴 "(x, y)"

    class Point
    {
        private double x;
        private double y;

        public Point(double x, double y)
        {
            this.x = x;
            this.y = y;
        }
        public double GetX()
        {
            return x;
        }
        public double GetY()
        {
            return y;
        }
        public void SetX(double x)
        {
            this.x = x;
        }
        public void SetY(double y)
        {
            this.y = y;
        }
        public string GetString()
        {
            return $"({x}, {y})";
        }
    }

    // 추상 클래스로 변경
    // Area, Round 추상 메소드로 변경
    abstract class Shape
    {
        public abstract double Area();

        public abstract double Round();
 
    }

    // Rectangle
    // 생성자: (Point, Point)   // 조건부조합 : (0,0), (0,0)
    // 필드: Point lt, Point rb
    // 메소드: GetLT(), GetRB(), SetLTRB(), 문자열 리턴 "LT: (x, y) / RB: (x, y)"

    class Rectangle : Shape
    {
        private Point lt = new Point(0.0, 0.0);
        private Point rb = new Point(0.0, 0.0);
        public Rectangle(Point lt, Point rb)
        {
            SetLTRB(lt, rb);
        }
        public Point GetLT()
        {
            return new Point(lt.GetX(), lt.GetY());
        }
        public Point GetRB()
        {
            return new Point(rb.GetX(), rb.GetY());
        }
        public void SetLTRB(Point lt, Point rb)
        {
            if(lt.GetX() < rb.GetX() && lt.GetY() > rb.GetY())
            {
                this.lt = new Point(lt.GetX(), lt.GetY());  // 깊은 복사
                this.rb = new Point(rb.GetX(), rb.GetY());
            }
        }
        public override string ToString()
        {
            return $"LT: {lt.GetString()} / RB: {rb.GetString()}";
        }
        public override double Area()
        {
            return ((rb.GetX() - lt.GetX()) + (lt.GetY() - rb.GetY())) * 2;
        }
        public override double Round()
        {
            return (rb.GetX() - lt.GetX()) * (lt.GetY() - rb.GetY());
        }
    }

    // Circle
    // 필드: Point center, double radius
    // 생성자: (Point, double)
    // 메소드: GetCenter(), GetRadius(), SetCenter(), SetRadius(), ToString() "중점: (??, ??) / 반지름: ??"

    class Circle : Shape
    {
        private Point center;
        private double radius = 0.0;

        public Circle(Point center, double radius)
        {
            SetCenter(center);
            SetRadius(radius);          
        }
        public Point GetCenter()
        {
            return new Point(center.GetX(), center.GetY());
        }
        public double GetRadius()
        {
            return radius;
        }
        public void SetCenter(Point center)
        {
            this.center = new Point(center.GetX(), center.GetY());
        }
        public void SetRadius(double radius)
        {
            if(radius >= 0.0)
            {
                this.radius = radius;
            }
            else
            {
                Console.WriteLine("반지름은 음수가 될 수 없습니다.");
            }
        }
        public override string ToString()
        {
            return $"중점: {center.GetString()}/ 반지름: {radius}";
        }
        public override double Area()
        {
            return 2 * 3.14 * Math.PI;
        }
        public override double Round()
        {
            return 3.14 * Math.PI * Math.PI;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            /*
            // Point 예제

            Point point = new Point(1.0, 2.0);
            Console.WriteLine(point.GetString());

            point.SetX(10.0);
            Console.WriteLine(point.GetX());

            point.SetY(20.0);
            Console.WriteLine(point.GetY());
            */

            /*
            // Rectangle 예제

            Point lt = new Point(3.0, 4.0);
            Point rb = new Point(7.0, 2.0);

            Rectangle rect = new Rectangle(lt, rb);

            Console.WriteLine(rect.GetString());

            lt.SetX(1.0);
            Console.WriteLine(lt.GetString());
            Console.WriteLine(rect.GetString());

            Point pt5 = rect.GetLT();
            pt5.SetX(200.0);

            Console.WriteLine(rect.GetString());
            */

            /*
            // Circle 예제

            Point center2 = new Point(5.0, 9.1);
            double rad2 = 4;

            Circle cir1 = new Circle(new Point(1.0, 2.0), 10.0);
            Circle cir2 = new Circle(center2, rad2);
            Console.WriteLine(cir1.GetString());

            cir2.SetCenter(cir1.GetCenter());
            Console.WriteLine(cir2.GetString());
            cir1.SetCenter(new Point(8.0, 5.0));
            cir1.SetRadius(-10);
            Console.WriteLine(cir1.GetString());
            */


            // Override 예제

            Shape shape1 = new Rectangle(new Point(1.0, 4.0), new Point(3.0, 2.0));
            Console.WriteLine(shape1);  // LT: (1, 4) RB: (3, 2)

            Shape shape2 = new Circle(new Point(2.5, 2.5), 5.0);
            Console.WriteLine(shape2);  // Center: (2.5, 2.5) Radius: 5.0

            Console.WriteLine(shape1.Area());
            Console.WriteLine(shape1.Round());
            Console.WriteLine(shape2.Area());
            Console.WriteLine(shape2.Round());
        }
    }
}
